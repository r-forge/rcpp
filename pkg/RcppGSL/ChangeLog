2010-11-28  Romain Francois <romain@r-enthusiasts.com>

    * inst/include/RcppGSLForward.h: vector_view<T> now exposes a public data
    member of class vector<T> called vector. Similarly, matrix_view<T> exposes
    a public data member of type matrix<T> called matrix.

2010-11-28  Dirk Eddelbuettel  <edd@debian.org>

	* inst/examples/RcppGSLExample/: Started as a means to provide a
	simple yet complete example of using RcppGSL in a user package

	* NEWS: Added with initial notes towards a release

2010-11-27  Romain Francois <romain@r-enthusiasts.com>

	* include/include/*h: Updated to satisfy some grumblings from g++

2010-11-27  Dirk Eddelbuettel  <edd@debian.org>

	* R/fastLm.R: summary() now also computed R2 and adjR2

2010-05-25  Romain Francois <romain@r-enthusiasts.com>

	* inst/include/RcppGSLForward.h : add indexing operator, stl iterator
	and begin() and end() methods to RcppGSL::vector using proxy classes

	* inst/include/RcppGSLForward.h : RcppGSL::matrix gets indexing
	operator(int,int)

	* configure.win: added empty configure.win so that R CMD check does
	not get jealous about the configure script

	* src/Makevars.win: use Brian Ripley's suggestions to anticipate R 2.12.0

	* inst/include/*.h: RcppGSL::vector_view and RcppGSL::matrix_view

2010-05-13  Dirk Eddelbuettel  <edd@debian.org>

	* R/fastLm.R: fastLm is now generic and behaves similar to lm():
	formula interface, returns object of class 'fastLm', and had methods
	for print, summary and predict
	* man/fasttLm.Rd: documented interface accordingly
	* src/fastLm.cpp: Added and degrees of freedom to list of result
	returned from C++ to R

2010-05-13  Romain Francois <romain@r-enthusiasts.com>

	* inst/include/*.h: wrap specializations are now inline

	* inst/include/*.h: new classes RcppGSL::matrix<T> and
	RcppGSL::matrix_view<T>

2010-05-12  Dirk Eddelbuettel  <edd@debian.org>

	* src/fastLm.cpp : added fastLm from Rcpp examples

2010-05-12  Romain Francois <romain@r-enthusiasts.com>

	* inst/include/*.h: added classes RcppGSL::vector<T> that act as
	smart pointers to gsl_vector_* objects. This gives nicer syntax and
	helps Rcpp implicit converters wrap and as.


